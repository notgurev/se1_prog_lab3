ТЕКСТ:

>   Ворчун поднялся со своего места и сказал: Он сел рядом с Тюбиком, но Тюбик тоже выбивал дробь зубами.
-> Добавить объекты: Vorchun, Tubik;
-> Vorchun SITTING где-то сбоку
-> Vorchun.say какую-нибудь ерунду
-> Vorchun.STAND
-> Vorchun.move к Tubik
-> Vorchun.SITTING
-> Tubik.mood пусть будет PANIC, можно написать announceMood() (объявить настроение), чтобы вывести "Тюбик в панике" (вместо "выбивать дробь зубами")

>   Ворчун подозрительно посмотрел на него: Ворчун встал и пересел на другое место.
-> "сюжетный" метод lookAt(who), sout(this.toString(), "посмотрел на ", who.toString())
-> Vorchun.move в другое место

>   Так он пересаживался несколько раз и только другим мешал.
-> Еще пару раз Vorchun.move()

...

>   Ворчун поглядел вниз и сказал: Ворчун и Незнайка начали спорить и спорили до самого вечера.
-> Перегрузить lookAt(Enum direction), Vorchun.lookAt(DOWN), sout
-> Vorchun.say(что-то)
-> КАК РЕАЛИЗОВАТЬ СПОР

>   Знайки не было, и никто теперь не мог остановить их.
-> если есть в инвентаре владельца есть Mind.SMART, то остановить, но Знайки нет, спор продолжается

>   Солнце уже клонилось к закату.
-> TimeOfTheDay{MORNING("Солнце поднимается с Востока"), AFTERNOON("Солнце ровно над головой"), EVENING("Солнце клонится к закату"), NIGHT("Тьма тьмущая")}
-> TOTD = EVENING, sout(TOTD)

>   Ветер крепчал.
-> enum Wind.STRONG, sout()...

>   Шар еще больше остыл и снова стал опускаться вниз, а Ворчун и Незнайка не умолкали.
-> balloon.temp уменьшился, скорость
-> спор продолжается

ИДЕИ:
* absentMinded заменить на enum Intelligence
* вывод карты с центром и радиусом
* в displayMap можно засунуть исключение, если объектов инвентаря нет: emptyInventoryException
* в removeItem можно пихнуть исключение, если нечего удалять: noItemsForRemoval
* Можно реализовать структуры, занимающие несколько клеток
* При этом у некоторых энтити будет приоритет отрисовки, например у людей
* Надо нормально расположить персонажей!

ЗАДАНИЕ:
В программе должны быть реализованы 2 собственных класса исключений (checked и unchecked), а также обработка исключений этих классов.
В программу необходимо добавить использование локальных, анонимных и вложенных классов (static и non-static).